<div class="mt-24 relative">
    <div class="absolute top-96 right-0 w-48 h-48 blur-[180px] bg-gradient-to-r from-blue-300 to-blue-500 rounded-3xl z-[-1]"></div>
    <div class="absolute bottom-0 left-0 w-48 h-48 blur-[200px] bg-gradient-to-r from-blue-300 to-blue-500 rounded-3xl z-[-1]"></div>

    <div class="flex flex-col lg:flex-row space-x-0 m-16 lg:space-x-4 space-y-4 lg:space-y-0">
        <div class="w-full bg-[#232323] p-6 overflow-y-auto rounded-xl">
            <table class="w-full divide-y divide-blue-600 rounded-lg">
                <thead class="bg-[#2d2d2d] rounded-xl">
                    <tr>
                        <th class="px-2 lg:px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider text-center">Nombre</th>
                        <th class="px-2 lg:px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider text-center">Correo</th>
                        <th class="px-2 lg:px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider text-center">Rol</th>
                        <th class="px-2 lg:px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider text-center">Acciones</th>
                    </tr>
                </thead>
                <tbody class="divide-y bg-[#2d2d2d] divide-zinc-700 rounded-xl">
                    {{#each users}}
                    <tr data-user-id="{{this._id}}">
                        <td class="px-2 lg:px-6 py-4 whitespace-nowrap">
                            <div class="text-xs lg:text-sm text-blue-500 text-center">{{this.first_name}} {{this.last_name}}</div>
                        </td>
                        <td class="px-2 lg:px-6 py-4 whitespace-nowrap">
                            <div class="text-xs lg:text-sm text-gray-200 text-center">{{this.email}}</div>
                        </td>
                        <td class="px-2 lg:px-6 py-4 whitespace-nowrap">
                            <div class="text-xs lg:text-sm text-gray-200 text-center">
                                <select class="bg-[#2d2d2d] text-white border border-gray-500 rounded p-1 user-role-select">
                                    <option value="User" {{#if this.isUser}}selected{{/if}}>User</option>
                                    <option value="Premium" {{#if this.isPremium}}selected{{/if}}>Premium</option>
                                    <option value="Admin" {{#if this.isAdmin}}selected{{/if}}>Admin</option>
                                </select>
                                <button class="text-xs text-blue-500 update-role-btn">Actualizar</button>
                            </div>
                        </td>
                        <td class="px-2 lg:px-6 py-4 whitespace-nowrap">
                            <button class="text-xs text-red-500 delete-user-btn">Eliminar</button>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", () => {
    const updateRoleButtons = document.querySelectorAll('.update-role-btn');
    updateRoleButtons.forEach(button => {
        button.addEventListener('click', async (event) => {
            event.preventDefault();
            const userId = button.closest('tr').getAttribute('data-user-id');
            const roleSelect = button.parentElement.querySelector('.user-role-select');
            const role = roleSelect.value;

            try {
                const response = await fetch(`/api/admin/${userId}/role`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ role })
                });
                const result = await response.json();
            Toastify({
                text: result.message,
                className: result.success ? "success" : "error",
                newWindow: true,
                style: {
                    background: result.success ? "rgba(43, 69, 186, 0.2)" : "rgba(255, 0, 0, 0.2)",
                    border: result.success ? "1px solid #2b45ba" : "1px solid #C52222",
                    borderRadius: "10px",
                    fontSize: "12px",
                },
            }).showToast();                
            } catch (error) {
                console.error('Error:', error);
            }
        });
    });

    const deleteButtons = document.querySelectorAll('.delete-user-btn');
    deleteButtons.forEach(button => {
        button.addEventListener('click', async (event) => {
            event.preventDefault();
            const userId = button.closest('tr').getAttribute('data-user-id');

            try {
                const response = await fetch(`/api/admin/${userId}/delete`, {
                    method: 'POST',
                });
                const result = await response.json();
                Toastify({
                    text: result.message,
                    className: result.success ? "success" : "error",
                    newWindow: true,
                    style: {
                        background: result.success ? "rgba(43, 69, 186, 0.2)" : "rgba(255, 0, 0, 0.2)",
                        border: result.success ? "1px solid #2b45ba" : "1px solid #C52222",
                        borderRadius: "10px",
                        fontSize: "12px",
                    },
                }).showToast();
                if (result.success) {
                    button.closest('tr').remove();
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });
    });
});
</script>
