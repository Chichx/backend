paths:
  /auth/register/:
    post:
      summary: Registrar un usuario en la plataforma
      tags: 
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        "200":
          description: La operación fue exitosa. Se registró el usuario.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Register'
        "400": 
          description: Se envió un dato no esperado.
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso.

  /auth/login/:
    post:
      summary: Iniciar sesión en la plataforma
      tags: 
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        "200":
          description: La operación fue exitosa. El usuario ha iniciado sesión.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Login'
        "400": 
          description: Credenciales inválidas.
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso.

  /api/products:
    get:
      summary: Obtener todos los productos
      tags:
        - Products
      responses:
        "200":
          description: Lista de productos obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        "500":
          description: Error inesperado en el servidor
    post:
      summary: Agregar un nuevo producto
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        "201":
          description: Producto creado exitosamente
        "400":
          description: Error en la solicitud del producto
        "401":
          description: No autorizado, debe iniciar sesión
        "500":
          description: Error inesperado en el servidor

  /api/products/{id}:
    get:
      summary: Obtener un producto por ID
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del producto
      responses:
        "200":
          description: Producto obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "404":
          description: Producto no encontrado
        "500":
          description: Error inesperado en el servidor
    put:
      summary: Actualizar un producto por ID
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        "200":
          description: Producto actualizado exitosamente
        "400":
          description: Error en la solicitud del producto
        "404":
          description: Producto no encontrado
        "500":
          description: Error inesperado en el servidor
    delete:
      summary: Eliminar un producto por ID
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del producto
      responses:
        "200":
          description: Producto eliminado exitosamente
        "404":
          description: Producto no encontrado
        "500":
          description: Error inesperado en el servidor

  /api/carts:
    post:
      summary: Crear un nuevo carrito
      tags:
        - Carts
      responses:
        "201":
          description: Carrito creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        "500":
          description: Error inesperado en el servidor

  /api/carts/{cid}:
    get:
      summary: Obtener un carrito por ID
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
      responses:
        "200":
          description: Carrito obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        "404":
          description: Carrito no encontrado
        "500":
          description: Error inesperado en el servidor
    put:
      summary: Actualizar un carrito por ID
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    $ref: '#/components/schemas/ProductInCart'
      responses:
        "200":
          description: Carrito actualizado exitosamente
        "400":
          description: Error en la solicitud de actualización del carrito
        "404":
          description: Carrito no encontrado
        "500":
          description: Error inesperado en el servidor
    delete:
      summary: Eliminar todos los productos de un carrito por ID
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
      responses:
        "200":
          description: Todos los productos eliminados exitosamente del carrito
        "404":
          description: Carrito no encontrado
        "500":
          description: Error inesperado en el servidor

  /api/carts/{cid}/product/{pid}:
    post:
      summary: Agregar un producto a un carrito
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: ID del producto
      responses:
        "200":
          description: Producto agregado exitosamente al carrito
        "403":
          description: No permitido agregar un producto propio al carrito
        "500":
          description: Error inesperado en el servidor
    delete:
      summary: Eliminar un producto de un carrito
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: ID del producto
        - in: query
          name: removeAll
          required: false
          schema:
            type: boolean
          description: Indica si se deben eliminar todas las unidades del producto
      responses:
        "200":
          description: Producto eliminado exitosamente del carrito
        "404":
          description: Producto no encontrado en el carrito
        "500":
          description: Error inesperado en el servidor

  /api/carts/{cid}/product/{pid}/quantity:
    put:
      summary: Actualizar la cantidad de un producto en un carrito
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: ID del carrito
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: ID del producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  description: Nueva cantidad del producto en el carrito
      responses:
        "200":
          description: Cantidad del producto actualizada exitosamente
        "404":
          description: Producto no encontrado en el carrito
        "500":
          description: Error inesperado en el servidor

  /api/users/premium/{uid}:
    put:
      summary: Cambiar el rol de un usuario
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        "200":
          description: Rol del usuario cambiado exitosamente
        "400":
          description: El usuario no ha cargado su documentación
        "401":
          description: No autorizado, debe iniciar sesión
        "403":
          description: No tienes permiso para editar los roles de los usuarios
        "404":
          description: Usuario no encontrado
        "500":
          description: Error inesperado en el servidor

  /api/users/{uid}/documents:
    post:
      summary: Subir documentos para un usuario
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: ID del usuario
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profile:
                  type: string
                  format: binary
                  description: Documento de perfil
                product:
                  type: string
                  format: binary
                  description: Documento de producto
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Otros documentos
      responses:
        "200":
          description: Documentos subidos correctamente
        "400":
          description: No se subieron archivos o solicitud incorrecta
        "401":
          description: No autorizado, debe iniciar sesión
        "404":
          description: Usuario no encontrado
        "500":
          description: Error inesperado en el servidor

  /api/users:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Users
      responses:
        "200":
          description: Lista de usuarios obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "500":
          description: Error inesperado en el servidor
    delete:
      summary: Eliminar usuarios inactivos
      tags:
        - Users
      responses:
        "200":
          description: Usuarios inactivos eliminados exitosamente
        "404":
          description: No hay usuarios inactivos para eliminar
        "500":
          description: Error inesperado en el servidor

  /api/users/{id}/role:
    post:
      summary: Actualizar rol de usuario
      tags:
        - Admin
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: Nuevo rol del usuario
      responses:
        "200":
          description: Rol del usuario actualizado correctamente
        "401":
          description: Acceso no autorizado
        "404":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor

  /api/users/{id}/delete:
    post:
      summary: Eliminar usuario
      tags:
        - Admin
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        "200":
          description: Usuario eliminado correctamente
        "401":
          description: Acceso no autorizado
        "404":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor

components:
  schemas:
    Register: 
      type: object
      properties:
        _id: 
          type: string
          description: Id autogenerado de MongoDB.
        first_name: 
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        age:
          type: integer
          description: Edad del usuario
        email:
          type: string
          description: Email del usuario
        password:
          type: string
          description: Contraseña del usuario
        cart: 
          type: string
          description: Id del carrito asociado
        role: 
          type: string
          description: Role del usuario
          enum: ['User', 'Premium', 'Admin']
          default: 'User'
      example: 
        _id: "647fa8c9e46dbc5a20320181"
        first_name: "Usuario de prueba 1"
        last_name: "Apellido de prueba 1"
        age: 19
        email: "correodeprueba1@gmail.com"
        password: "Test123456"
        cart: "647fa8c9e46dbc5a20320181"
        role: "Premium"

    Login:
      type: object
      properties:
        email:
          type: string
          description: Email del usuario
        password:
          type: string
          description: Contraseña del usuario
      example: 
        email: "correodeprueba1@gmail.com"
        password: "Test123456"
      required:
        - email
        - password

    Product:
      type: object
      properties:
        id:
          type: string
          description: ID del producto
        name:
          type: string
          description: Nombre del producto
        description:
          type: string
          description: Descripción del producto
        price:
          type: number
          description: Precio del producto
        code:
          type: string
          description: Código del producto
        status:
          type: boolean
          description: Estado del producto (disponible o no)
        stock:
          type: integer
          description: Cantidad de stock del producto
        category:
          type: string
          description: Categoría del producto
        thumbnail:
          type: string
          description: URL de la imagen del producto
        ownerId:
          type: string
          description: ID del propietario del producto

    ProductInput:
      type: object
      properties:
        name:
          type: string
          description: Nombre del producto
        description:
          type: string
          description: Descripción del producto
        price:
          type: number
          description: Precio del producto
        code:
          type: string
          description: Código del producto
        status:
          type: boolean
          description: Estado del producto (disponible o no)
        stock:
          type: integer
          description: Cantidad de stock del producto
        category:
          type: string
          description: Categoría del producto
        thumbnail:
          type: string
          description: URL de la imagen del producto
      required:
        - name
        - description
        - price
        - code
        - status
        - stock
        - category

    ProductsResponse:
      type: object
      properties:
        success:
          type: boolean
        payload:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        totalPages:
          type: integer
        prevPage:
          type: integer
          nullable: true
        nextPage:
          type: integer
          nullable: true
        hasPrevPage:
          type: boolean
        hasNextPage:
          type: boolean
        prevLink:
          type: string
          nullable: true
        nextLink:
          type: string
          nullable: true

    Cart:
      type: object
      properties:
        id:
          type: string
          description: ID del carrito
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductInCart'
    ProductInCart:
      type: object
      properties:
        productId:
          type: string
          description: ID del producto
        quantity:
          type: integer
          description: Cantidad del producto en el carrito

    User:
      type: object
      properties:
        id:
          type: string
          description: ID del usuario
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico del usuario
        role:
          type: string
          description: Rol del usuario
    Document:
      type: object
      properties:
        name:
          type: string
          description: Nombre del documento
        reference:
          type: string
          description: Ruta del documento

    Admin:
      type: object
      properties:
        id:
          type: string
          description: ID del usuario
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico del usuario
        role:
          type: string
          description: Rol del usuario